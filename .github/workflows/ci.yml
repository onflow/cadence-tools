name: CI

on:
  push:
    branches:
      - master
      - "feature/**"
      - "v**"
  pull_request:
    branches:
      - master
      - "feature/**"
      - "v**"

jobs:
  paths-filter:
    runs-on: ubuntu-20.04
    outputs:
      test: ${{ steps.filter.outputs.test }}
      lint: ${{ steps.filter.outputs.lint }}
      languageserver: ${{ steps.filter.outputs.languageserver }}
      docgen: ${{ steps.filter.outputs.docgen }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            test:
              - 'test/**'
            lint:
              - 'lint/**'
            languageserver:
              - 'languageserver/**'
            docgen:
              - 'docgen/**'

  test-test:
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.test == 'true' }}
    name: Test (Test Framework)
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: make test-test
      - name: Check tidy
        run: make check-tidy-test

  test-lint:
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.lint == 'true' }}
    name: Test (Lint)
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: make test-lint
      - name: Check tidy
        run: make check-tidy-lint

  test-languageserver:
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.languageserver == 'true' }}
    name: Test (Language Server)
    runs-on: ubuntu-20.04
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install wabt
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - uses: actions/setup-node@v2
        with:
          node-version: "15"
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        working-directory: languageserver
        run: make build
      - name: Test
        run: make test-languageserver
      - name: Check tidy
        run: make check-tidy-languageserver

  test-docgen:
    needs: paths-filter
    if: ${{ needs.paths-filter.outputs.docgen == 'true' }}
    name: Test (Docgen)
    runs-on: ubuntu-20.04
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install wabt
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: make test-docgen
      - name: Check tidy
        run: make check-tidy-docgen

  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: "1.21"
      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Check license headers
        run: make check-headers
